---
import { projects } from '../data/projects';
import Button from '../components/Button.astro';
---

<section class="portfolio section bg-canvas" id="portfolio">
  <div class="portfolio__container">
    <div class="portfolio__header">
      <h2 class="portfolio__title">Defining the Skyline</h2>
      <p class="portfolio__subtitle">
        A showcase of our recent projects demonstrating quality, craftsmanship, and attention to detail
      </p>
    </div>

    <div class="portfolio__grid">
      {projects.map((project, index) => (
        <article class="project-card" data-project={project.id} style={`animation-delay: ${index * 0.15}s`}>
          <div class="project-card__image-wrapper">
            <img
              src={project.images[0]}
              alt={`${project.title} - ${project.category}`}
              class="project-card__image"
              loading="lazy"
            />
            <div class="project-card__overlay">
              <button class="project-card__view-btn" data-project-id={project.id}>
                View Gallery
              </button>
            </div>
          </div>
          <div class="project-card__content">
            <span class="project-card__category">{project.category}</span>
            <h3 class="project-card__title">{project.title}</h3>
            <p class="project-card__description">{project.description}</p>
          </div>
        </article>
      ))}
    </div>

    <div class="portfolio__cta">
      <Button href="#contact" variant="primary" size="large">
        Discuss Your Project
      </Button>
    </div>
  </div>
</section>

<!-- Project Gallery Modal -->
<div class="gallery-modal" id="galleryModal">
  <div class="gallery-modal__content">
    <button class="gallery-modal__close" aria-label="Close gallery">
      <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
        <line x1="18" y1="6" x2="6" y2="18"></line>
        <line x1="6" y1="6" x2="18" y2="18"></line>
      </svg>
    </button>

    <div class="gallery-modal__header">
      <h3 class="gallery-modal__title"></h3>
      <p class="gallery-modal__category"></p>
    </div>

    <div class="gallery-modal__slider">
      <button class="gallery-modal__nav gallery-modal__nav--prev" aria-label="Previous image">
        <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
          <polyline points="15 18 9 12 15 6"></polyline>
        </svg>
      </button>

      <div class="gallery-modal__image-container">
        <img class="gallery-modal__image" alt="">
      </div>

      <button class="gallery-modal__nav gallery-modal__nav--next" aria-label="Next image">
        <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
          <polyline points="9 18 15 12 9 6"></polyline>
        </svg>
      </button>
    </div>

    <div class="gallery-modal__thumbnails"></div>
  </div>
</div>

<style lang="scss">
  @import '../styles/variables';
  @import '../styles/mixins';

  .portfolio {
    &__container {
      @include container;
    }

    &__header {
      text-align: center;
      max-width: 700px;
      margin: 0 auto $spacing-4xl;
    }

    &__title {
      @include heading-style;
      font-size: $font-size-h2;
      margin-bottom: $spacing-lg;
    }

    &__subtitle {
      font-size: 1.125rem;
      color: $color-text-light;
      line-height: $line-height-relaxed;
    }

    &__grid {
      display: grid;
      grid-template-columns: 1fr;
      gap: $spacing-2xl;
      margin-bottom: $spacing-4xl;

      @include media-md {
        grid-template-columns: repeat(2, 1fr);
      }

      @include media-lg {
        grid-template-columns: repeat(3, 1fr);
      }
    }

    &__cta {
      text-align: center;
    }
  }

  .project-card {
    background-color: $color-white;
    border-radius: $border-radius-lg;
    overflow: hidden;
    box-shadow: $shadow-md;
    transition: all $transition-base;
    animation: fadeInUp 0.8s ease-out forwards;
    opacity: 0;

    &:hover {
      transform: translateY(-8px);
      box-shadow: $shadow-xl;

      .project-card__image {
        transform: scale(1.1);
      }

      .project-card__overlay {
        opacity: 1;
      }
    }

    &__image-wrapper {
      position: relative;
      overflow: hidden;
      aspect-ratio: 16 / 10;
    }

    &__image {
      width: 100%;
      height: 100%;
      object-fit: cover;
      transition: transform $transition-slow;
    }

    &__overlay {
      position: absolute;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      background: linear-gradient(
        180deg,
        rgba($color-black, 0.2) 0%,
        rgba($color-black, 0.7) 100%
      );
      display: flex;
      align-items: center;
      justify-content: center;
      opacity: 0;
      transition: opacity $transition-base;
    }

    &__view-btn {
      @include button-base;
      background-color: $color-prestige-gold;
      color: $color-heritage-green;
      padding: $spacing-md $spacing-xl;
      font-size: 0.875rem;
      text-transform: uppercase;
      letter-spacing: 0.05em;

      &:hover {
        background-color: lighten($color-prestige-gold, 10%);
        transform: scale(1.05);
      }
    }

    &__content {
      padding: $spacing-xl;
    }

    &__category {
      display: inline-block;
      font-size: 0.75rem;
      text-transform: uppercase;
      letter-spacing: 0.1em;
      color: $color-prestige-gold;
      margin-bottom: $spacing-sm;
    }

    &__title {
      font-size: $font-size-h4;
      font-weight: $font-weight-semibold;
      color: $color-heritage-green;
      margin-bottom: $spacing-md;
    }

    &__description {
      font-size: 0.9375rem;
      color: $color-text;
      line-height: $line-height-relaxed;
    }
  }

  // Gallery Modal
  .gallery-modal {
    display: none;
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-color: rgba($color-black, 0.95);
    z-index: $z-modal;
    animation: fadeIn 0.3s ease-out;

    &--open {
      display: flex;
      align-items: center;
      justify-content: center;
    }

    &__content {
      position: relative;
      max-width: 1200px;
      width: 90%;
      max-height: 90vh;
      display: flex;
      flex-direction: column;
    }

    &__close {
      position: absolute;
      top: $spacing-lg;
      right: $spacing-lg;
      background: rgba($color-white, 0.1);
      border: none;
      color: $color-white;
      width: 48px;
      height: 48px;
      border-radius: $border-radius-full;
      cursor: pointer;
      display: flex;
      align-items: center;
      justify-content: center;
      transition: all $transition-fast;
      z-index: 10;

      &:hover {
        background: rgba($color-white, 0.2);
        transform: rotate(90deg);
      }
    }

    &__header {
      text-align: center;
      margin-bottom: $spacing-xl;
    }

    &__title {
      color: $color-white;
      font-size: $font-size-h3;
      margin-bottom: $spacing-sm;
    }

    &__category {
      color: $color-prestige-gold;
      font-size: 0.875rem;
      text-transform: uppercase;
      letter-spacing: 0.1em;
    }

    &__slider {
      position: relative;
      display: flex;
      align-items: center;
      justify-content: center;
      flex-grow: 1;
    }

    &__nav {
      position: absolute;
      top: 50%;
      transform: translateY(-50%);
      background: rgba($color-white, 0.1);
      border: none;
      color: $color-white;
      width: 48px;
      height: 48px;
      border-radius: $border-radius-full;
      cursor: pointer;
      display: flex;
      align-items: center;
      justify-content: center;
      transition: all $transition-fast;
      z-index: 5;

      &:hover {
        background: rgba($color-white, 0.2);
      }

      &--prev {
        left: $spacing-xl;
      }

      &--next {
        right: $spacing-xl;
      }
    }

    &__image-container {
      max-width: 100%;
      max-height: 70vh;
      display: flex;
      align-items: center;
      justify-content: center;
    }

    &__image {
      max-width: 100%;
      max-height: 100%;
      object-fit: contain;
    }

    &__thumbnails {
      display: flex;
      gap: $spacing-sm;
      justify-content: center;
      margin-top: $spacing-xl;
      overflow-x: auto;
      padding: $spacing-sm;

      img {
        width: 80px;
        height: 60px;
        object-fit: cover;
        border-radius: $border-radius-sm;
        cursor: pointer;
        opacity: 0.6;
        transition: opacity $transition-fast;

        &:hover,
        &.active {
          opacity: 1;
        }
      }
    }
  }

  @keyframes fadeIn {
    from {
      opacity: 0;
    }
    to {
      opacity: 1;
    }
  }

  @keyframes fadeInUp {
    from {
      opacity: 0;
      transform: translateY(20px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }
</style>

<script>
  import { projects } from '../data/projects';

  // Gallery Modal Functionality
  const modal = document.getElementById('galleryModal');
  const modalTitle = modal?.querySelector('.gallery-modal__title') as HTMLElement;
  const modalCategory = modal?.querySelector('.gallery-modal__category') as HTMLElement;
  const modalImage = modal?.querySelector('.gallery-modal__image') as HTMLImageElement;
  const thumbnailsContainer = modal?.querySelector('.gallery-modal__thumbnails');
  const closeBtn = modal?.querySelector('.gallery-modal__close');
  const prevBtn = modal?.querySelector('.gallery-modal__nav--prev');
  const nextBtn = modal?.querySelector('.gallery-modal__nav--next');

  let currentProject: typeof projects[0] | null = null;
  let currentImageIndex = 0;

  // Open gallery
  document.querySelectorAll('.project-card__view-btn').forEach(btn => {
    btn.addEventListener('click', () => {
      const projectId = btn.getAttribute('data-project-id');
      currentProject = projects.find(p => p.id === projectId) || null;

      if (currentProject && modal) {
        currentImageIndex = 0;
        modalTitle.textContent = currentProject.title;
        modalCategory.textContent = currentProject.category;

        // Load thumbnails
        if (thumbnailsContainer) {
          thumbnailsContainer.innerHTML = '';
          currentProject.images.forEach((img, index) => {
            const thumb = document.createElement('img');
            thumb.src = img;
            thumb.alt = `${currentProject?.title} - Image ${index + 1}`;
            thumb.addEventListener('click', () => {
              currentImageIndex = index;
              updateGalleryImage();
            });
            if (index === 0) thumb.classList.add('active');
            thumbnailsContainer.appendChild(thumb);
          });
        }

        updateGalleryImage();
        modal.classList.add('gallery-modal--open');
        document.body.style.overflow = 'hidden';
      }
    });
  });

  function updateGalleryImage() {
    if (currentProject && modalImage) {
      modalImage.src = currentProject.images[currentImageIndex];
      modalImage.alt = `${currentProject.title} - Image ${currentImageIndex + 1}`;

      // Update thumbnail active state
      const thumbnails = thumbnailsContainer?.querySelectorAll('img');
      thumbnails?.forEach((thumb, index) => {
        thumb.classList.toggle('active', index === currentImageIndex);
      });
    }
  }

  // Navigation
  prevBtn?.addEventListener('click', () => {
    if (currentProject) {
      currentImageIndex = (currentImageIndex - 1 + currentProject.images.length) % currentProject.images.length;
      updateGalleryImage();
    }
  });

  nextBtn?.addEventListener('click', () => {
    if (currentProject) {
      currentImageIndex = (currentImageIndex + 1) % currentProject.images.length;
      updateGalleryImage();
    }
  });

  // Close modal
  closeBtn?.addEventListener('click', () => {
    modal?.classList.remove('gallery-modal--open');
    document.body.style.overflow = '';
  });

  // Close on escape key
  document.addEventListener('keydown', (e) => {
    if (e.key === 'Escape' && modal?.classList.contains('gallery-modal--open')) {
      modal.classList.remove('gallery-modal--open');
      document.body.style.overflow = '';
    }
  });

  // Close on background click
  modal?.addEventListener('click', (e) => {
    if (e.target === modal) {
      modal.classList.remove('gallery-modal--open');
      document.body.style.overflow = '';
    }
  });
</script>